transition_lampen:
  alias: "Eerste Verdieping - Transition voor lampen slaapkamers"
  icon: mdi:ceiling-light
  mode: parallel
  max_exceeded: silent
  sequence:
    - variables:
        light: "light.{{ id }}"
        boolean: "input_boolean.transition_{{ id }}_active"
    - alias: "Check of transitie niet al actief is"
      condition: template
      value_template: "{{ is_state(boolean, 'off') }}"
    - alias: "Input booelan transitie aan"
      service: input_boolean.turn_on
      target:
        entity_id: "{{ boolean }}"
    - alias: "Start helderheid en kleurtemperatuur aanpassen?"
      choose:
        - conditions: "{{ change_start }}"
          sequence:
            - alias: "Lamp aanzetten met aangepaste waardes"
              service: light.turn_on
              target:
                entity_id: "{{ light }}"
              data:
                brightness: "{{ bright_start }}"
                color_temp: "{{ color_start }}"
      default:
        - alias: "Lamp aanzetten zoals hij was"
          service: light.turn_on
          target:
            entity_id: "{{ light }}"
    - alias: "Pauze"
      delay: "{{ step_time }}"
    - alias: "Feller of dimmen?"
      choose:
        - conditions: "{{ dim }}"
          sequence:
            - alias: "Start loop om te dimmen"
              repeat:
                while: "{{ state_attr(light, 'brightness') >= (bright_goal + 1) }}"
                sequence:
                  - variables:
                      bright: "{{ state_attr(light, 'brightness') }}"
                      color: "{{ state_attr(light, 'color_temp') }}"
                      steps_remaining: "{{ [ 1, ((bright - bright_goal) / bright_step) ] | max }}"
                      color_step: "{{ ((color_goal - color) / steps_remaining ) + 1  }}"
                  - alias: "Lamp helderheid en kleurtemperatuur beetje dimmen"
                    service: light.turn_on
                    target:
                      entity_id: "{{ light }}"
                    data:
                      brightness: "{{ [ bright_goal, bright | int(0)- bright_step] | max }}"
                      color_temp: "{{ [ color_goal, color + color_step ] | min }}"
                  - alias: "Pauze tussen stappen"
                    delay: "{{ step_time }}"
      default:
        - alias: "Start loop om lamp herderder te maken"
          repeat:
            while: "{{ state_attr(light, 'brightness') < (bright_goal - 2) }}"
            sequence:
              - variables:
                  bright: "{{ state_attr(light, 'brightness') }}"
                  color: "{{ state_attr(light, 'color_temp') }}"
                  steps_remaining: "{{ [ 1, ((bright_goal - bright ) / bright_step) ] | max  }}"
                  color_step: "{{ ((color - color_goal) / steps_remaining ) + 1  }}"
              - alias: "Lamp beetje helderder maken"
                service: light.turn_on
                target:
                  entity_id: "{{ light }}"
                data:
                  brightness: "{{ [ bright_goal, bright + bright_step] | min }}"
                  color_temp: "{{ [ color_goal, color - color_step ] | max }}"
              - alias: "Pauze tussen stappen"
                delay: "{{ step_time }}"
    - alias: "input_boolean weer uitzetten"
      service: input_boolean.turn_off
      target:
        entity_id: "{{ boolean }}"
